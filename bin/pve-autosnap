#!/bin/bash
#
# pve-autosnap - Copyright (c) 2018 - Olivier Poncet
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>
#

# ----------------------------------------------------------------------------
# qm interface definitions
# ----------------------------------------------------------------------------

QM="/usr/sbin/qm"
QM_SELECT="listsnapshot"
QM_CREATE="snapshot"
QM_DELETE="delsnapshot"

# ----------------------------------------------------------------------------
# parse the command-line
# ----------------------------------------------------------------------------

if [ "x${1}y" != "xy" ]
then
    opt_vmid="${1}"
else
    opt_vmid="help"
fi

if [ "x${2}y" != "xy" ]
then
    opt_keep="${2}"
else
    opt_keep="1"
fi

# ----------------------------------------------------------------------------
# display help
# ----------------------------------------------------------------------------

if [ "x${opt_vmid}y" = "xhelpy" ]
then
    cat << ____EOF
Usage: pve-autosnap [ help | <vmid> [<keep>] ]

Options:

    help	display this help and exit
    vmid	specifies the virtual machine id, can be 'all' to select all VM
    keep	specifies the maximum number of snapshot to keep (default is 1)

____EOF
    exit 0
fi

# ----------------------------------------------------------------------------
# if the given vmid is 'all', process all of them then exit
# ----------------------------------------------------------------------------

if [ "x${opt_vmid}y" = "xally" ]
then
    VMID_LIST="$(/usr/sbin/qm list | awk '{ print $1 }' | grep -v VMID | sort -n)"
    for VMID in ${VMID_LIST}
    do
        if [ "${VMID}" -ge "100" ]
        then
            ${0} "${VMID}" ${opt_keep}
        fi
    done
    exit 0
fi

# ----------------------------------------------------------------------------
# if the given vmid seems to be a vmid, check if this is a valid vmid
# ----------------------------------------------------------------------------

if [ "x$(${QM} status ${opt_vmid} 2>/dev/null)y" = "xy" ]
then
    echo "error: <vmid> does not look like a valid VM ID"
    exit 1
fi

# ----------------------------------------------------------------------------
# prepare the vmid snapshoting
# ----------------------------------------------------------------------------

AUTOSNAP_VMID="${opt_vmid}"
AUTOSNAP_KEEP="${opt_keep}"
AUTOSNAP_NAME="autosnap_$(date '+%Y%m%d_%H%M%S')"
AUTOSNAP_DESC="automatic snapshot"
AUTOSNAP_LIST="$(${QM} "${QM_SELECT}" "${AUTOSNAP_VMID}" | grep "^autosnap_" | awk '{ print $1 }' | sort)"

# ----------------------------------------------------------------------------
# delete old snapshots for this vmid
# ----------------------------------------------------------------------------

AUTOSNAP_LEFT="$(echo "${AUTOSNAP_LIST}" | wc -w)"
for AUTOSNAP_ITEM in ${AUTOSNAP_LIST}
do
    if [ "${AUTOSNAP_LEFT}" -ge "${AUTOSNAP_KEEP}" ]
    then
        ${QM} "${QM_DELETE}" "${AUTOSNAP_VMID}" "${AUTOSNAP_ITEM}"
    fi
    AUTOSNAP_LEFT=$((AUTOSNAP_LEFT - 1))
done

# ----------------------------------------------------------------------------
# create new snapshot for this vmid
# ----------------------------------------------------------------------------

${QM} "${QM_CREATE}" "${AUTOSNAP_VMID}" "${AUTOSNAP_NAME}" -description "${AUTOSNAP_DESC}"

# ----------------------------------------------------------------------------
# End-Of-File
# ----------------------------------------------------------------------------
